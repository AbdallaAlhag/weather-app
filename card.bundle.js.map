{"version":3,"file":"card.bundle.js","mappings":"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","sources":["webpack://weather-app/./src/card.css","webpack://weather-app/./node_modules/css-loader/dist/runtime/api.js","webpack://weather-app/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/compat get default export","webpack://weather-app/webpack/runtime/define property getters","webpack://weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://weather-app/webpack/runtime/nonce","webpack://weather-app/./src/card.css?1b30","webpack://weather-app/./node_modules/@kurkle/color/dist/color.esm.js","webpack://weather-app/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://weather-app/./node_modules/chart.js/dist/chart.js","webpack://weather-app/./node_modules/chart.js/auto/auto.js","webpack://weather-app/./src/card.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.card {\r\n  font-family: \"Helvetica Neue\", Arial, sans-serif;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\n.history-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* Chart.js Card, credits: Russell Palmiter, https://codepen.io/rozklad/pen/OOMGza */\r\n.card {\r\n  /* background: linear-gradient(-45deg, #5555ff, #9787ff); */\r\n  /* background: linear-gradient(-45deg, rgba(85, 85, 255, 0.3), rgba(151, 135, 255, 0.3)); */\r\n  box-shadow: 0 0 6px rgba(0, 0, 0, 0.1);\r\n  position: relative;\r\n  /* top: 50%; */\r\n  /* left: 50%; */\r\n  /* transform: translate(-50%, -50%); */\r\n  width: 1250px;\r\n  height: 375px;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  display: flex;\r\n\r\n  flex-direction: column; /* Use flex to arrange children vertically */\r\n  align-items: center; /* Center content horizontally */\r\n  justify-content: center; /* Evenly space out content vertically */\r\n}\r\n\r\n/* hide limit values on X axis */\r\n.card #canvas {\r\n  /* height: 75%; */\r\n  /* margin-left: -30px;\r\n    margin-right: -30px;    \r\n    width: 112% !important; */\r\n  width: 100% !important; /* Ensure the canvas fills the width */\r\n  height: 50% !important; /* Ensure the canvas fills the height */\r\n  padding: 10px;\r\n  margin-bottom: 8%;\r\n  font-weight: bold;\r\n}\r\n\r\n.card .about {\r\n  height: 150px;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.card .about h3,\r\n.card .about .lead {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-weight: 400;\r\n}\r\n\r\n.card .about h3 {\r\n  font-size: 24px;\r\n  color: #fff;\r\n}\r\n\r\n.card .about .lead {\r\n  color: #eee;\r\n}\r\n\r\n.card .info {\r\n  float: left;\r\n  padding: 10px 30px 10px 0;\r\n}\r\n\r\n.card .info p {\r\n  font-size: 11px;\r\n  color: #aaa;\r\n  font-weight: 300;\r\n}\r\n\r\n.legends {\r\n  padding-top: 20px;\r\n  overflow: hidden;\r\n}\r\n\r\n.legend {\r\n  display: block;\r\n  width: 8px;\r\n  height: 8px;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.legend--this {\r\n  background-color: #5555ff;\r\n}\r\n\r\n.legend--prev {\r\n  background-color: #ff55b8;\r\n}\r\n\r\n.axis {\r\n  position: absolute;\r\n  color: #fff;\r\n  z-index: 1;\r\n  text-transform: uppercase;\r\n  display: flex;\r\n  width: 100%;\r\n  bottom: 0;\r\n  font-weight: bold;\r\n}\r\n\r\n.axis .tick img {\r\n  height: 40px;\r\n  width: auto;\r\n}\r\n.axis .tick {\r\n  flex: 1;\r\n  position: relative;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  line-height: 25px;\r\n}\r\n\r\n.axis .tick::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: block;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 1px;\r\n  height: 200px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.axis .tick .value {\r\n  transform: translateY(-240px);\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 0;\r\n  color: #fff;\r\n  border-radius: 2px;\r\n  width: 100%;\r\n  line-height: 20px;\r\n}\r\n\r\n.axis .tick:hover .value.value--this {\r\n  transform: translateY(-180px);\r\n  display: block;\r\n  opacity: 1;\r\n  font-weight: bolder;\r\n}\r\n\r\n.value.value--this {\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n}\r\n\r\n.day-number {\r\n  display: block;\r\n}\r\n\r\n.day-name {\r\n  display: block;\r\n  /* opacity: 0.4; */\r\n}\r\n\r\n/* Animated background, credits: Manuel Pinto, https://codepen.io/P1N2O/pen/pyBNzX */\r\n.card {\r\n  /* background: linear-gradient(-45deg, #555ff, #9787ff, #ff55b8, #ff8787); */\r\n  /* Space Theme */\r\n  /* background: linear-gradient(-45deg, rgba(55, 105, 255, 0.4), rgba(150, 50, 200, 0.3), rgba(30, 200, 120, 0.2), rgba(0, 180, 200, 0.35)); */\r\n  /* Background Colors */\r\n  background: linear-gradient(-45deg, rgba(36, 60, 64, 0.4), rgba(209, 208, 191, 0.3), rgba(131, 166, 156, 0.2), rgba(112, 147, 156, 0.35));\r\n  /* Complentary Colors */\r\n  /* background: linear-gradient(-45deg, rgba(64, 40, 36, 0.4), rgba(187, 252, 13, 0.3), rgba(166, 131, 141, 0.2), rgba(156, 121, 112, 0.35)); */\r\n\r\n  background-size: 400% 400%;\r\n  animation: bg 20s infinite;\r\n  box-shadow: 0 0 6px rgba(0, 0, 0, 0.1); /* Optional: Add a shadow for depth */\r\n}\r\n\r\n@keyframes bg {\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/card.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gDAAgD;AAClD;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA,oFAAoF;AACpF;EACE,2DAA2D;EAC3D,2FAA2F;EAC3F,sCAAsC;EACtC,kBAAkB;EAClB,cAAc;EACd,eAAe;EACf,sCAAsC;EACtC,aAAa;EACb,aAAa;EACb,mBAAmB;EACnB,gBAAgB;EAChB,aAAa;;EAEb,sBAAsB,EAAE,4CAA4C;EACpE,mBAAmB,EAAE,gCAAgC;EACrD,uBAAuB,EAAE,wCAAwC;AACnE;;AAEA,gCAAgC;AAChC;EACE,iBAAiB;EACjB;;6BAE2B;EAC3B,sBAAsB,EAAE,sCAAsC;EAC9D,sBAAsB,EAAE,uCAAuC;EAC/D,aAAa;EACb,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;AACxB;;AAEA;;EAEE,aAAa;EACb,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;EACX,yBAAyB;AAC3B;;AAEA;EACE,eAAe;EACf,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,UAAU;EACV,WAAW;EACX,gBAAgB;EAChB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,UAAU;EACV,yBAAyB;EACzB,aAAa;EACb,WAAW;EACX,SAAS;EACT,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,WAAW;AACb;AACA;EACE,OAAO;EACP,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,iBAAiB;EACjB,oBAAoB;EACpB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,cAAc;EACd,QAAQ;EACR,SAAS;EACT,UAAU;EACV,aAAa;EACb,oCAAoC;AACtC;;AAEA;EACE,6BAA6B;EAC7B,UAAU;EACV,oBAAoB;EACpB,kBAAkB;EAClB,SAAS;EACT,OAAO;EACP,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,iBAAiB;AACnB;;AAEA;EACE,6BAA6B;EAC7B,cAAc;EACd,UAAU;EACV,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,kBAAkB;AACpB;;AAEA,oFAAoF;AACpF;EACE,4EAA4E;EAC5E,gBAAgB;EAChB,6IAA6I;EAC7I,sBAAsB;EACtB,yIAAyI;EACzI,uBAAuB;EACvB,8IAA8I;;EAE9I,0BAA0B;EAC1B,0BAA0B;EAC1B,sCAAsC,EAAE,qCAAqC;AAC/E;;AAEA;EACE;IACE,2BAA2B;EAC7B;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,2BAA2B;EAC7B;AACF\",\"sourcesContent\":[\".card {\\r\\n  font-family: \\\"Helvetica Neue\\\", Arial, sans-serif;\\r\\n}\\r\\n\\r\\n* {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.history-container {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n/* Chart.js Card, credits: Russell Palmiter, https://codepen.io/rozklad/pen/OOMGza */\\r\\n.card {\\r\\n  /* background: linear-gradient(-45deg, #5555ff, #9787ff); */\\r\\n  /* background: linear-gradient(-45deg, rgba(85, 85, 255, 0.3), rgba(151, 135, 255, 0.3)); */\\r\\n  box-shadow: 0 0 6px rgba(0, 0, 0, 0.1);\\r\\n  position: relative;\\r\\n  /* top: 50%; */\\r\\n  /* left: 50%; */\\r\\n  /* transform: translate(-50%, -50%); */\\r\\n  width: 1250px;\\r\\n  height: 375px;\\r\\n  border-radius: 10px;\\r\\n  overflow: hidden;\\r\\n  display: flex;\\r\\n\\r\\n  flex-direction: column; /* Use flex to arrange children vertically */\\r\\n  align-items: center; /* Center content horizontally */\\r\\n  justify-content: center; /* Evenly space out content vertically */\\r\\n}\\r\\n\\r\\n/* hide limit values on X axis */\\r\\n.card #canvas {\\r\\n  /* height: 75%; */\\r\\n  /* margin-left: -30px;\\r\\n    margin-right: -30px;    \\r\\n    width: 112% !important; */\\r\\n  width: 100% !important; /* Ensure the canvas fills the width */\\r\\n  height: 50% !important; /* Ensure the canvas fills the height */\\r\\n  padding: 10px;\\r\\n  margin-bottom: 8%;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.card .about {\\r\\n  height: 150px;\\r\\n  padding: 20px;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.card .about h3,\\r\\n.card .about .lead {\\r\\n  margin-top: 0;\\r\\n  margin-bottom: 0;\\r\\n  font-weight: 400;\\r\\n}\\r\\n\\r\\n.card .about h3 {\\r\\n  font-size: 24px;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.card .about .lead {\\r\\n  color: #eee;\\r\\n}\\r\\n\\r\\n.card .info {\\r\\n  float: left;\\r\\n  padding: 10px 30px 10px 0;\\r\\n}\\r\\n\\r\\n.card .info p {\\r\\n  font-size: 11px;\\r\\n  color: #aaa;\\r\\n  font-weight: 300;\\r\\n}\\r\\n\\r\\n.legends {\\r\\n  padding-top: 20px;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.legend {\\r\\n  display: block;\\r\\n  width: 8px;\\r\\n  height: 8px;\\r\\n  margin-top: 15px;\\r\\n  margin-bottom: 15px;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\\r\\n.legend--this {\\r\\n  background-color: #5555ff;\\r\\n}\\r\\n\\r\\n.legend--prev {\\r\\n  background-color: #ff55b8;\\r\\n}\\r\\n\\r\\n.axis {\\r\\n  position: absolute;\\r\\n  color: #fff;\\r\\n  z-index: 1;\\r\\n  text-transform: uppercase;\\r\\n  display: flex;\\r\\n  width: 100%;\\r\\n  bottom: 0;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.axis .tick img {\\r\\n  height: 40px;\\r\\n  width: auto;\\r\\n}\\r\\n.axis .tick {\\r\\n  flex: 1;\\r\\n  position: relative;\\r\\n  font-size: 16px;\\r\\n  text-align: center;\\r\\n  padding-top: 10px;\\r\\n  padding-bottom: 10px;\\r\\n  line-height: 25px;\\r\\n}\\r\\n\\r\\n.axis .tick::after {\\r\\n  content: \\\"\\\";\\r\\n  position: absolute;\\r\\n  display: block;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  width: 1px;\\r\\n  height: 200px;\\r\\n  background: rgba(255, 255, 255, 0.2);\\r\\n}\\r\\n\\r\\n.axis .tick .value {\\r\\n  transform: translateY(-240px);\\r\\n  opacity: 0;\\r\\n  transition: all 0.3s;\\r\\n  position: absolute;\\r\\n  top: 20px;\\r\\n  left: 0;\\r\\n  color: #fff;\\r\\n  border-radius: 2px;\\r\\n  width: 100%;\\r\\n  line-height: 20px;\\r\\n}\\r\\n\\r\\n.axis .tick:hover .value.value--this {\\r\\n  transform: translateY(-180px);\\r\\n  display: block;\\r\\n  opacity: 1;\\r\\n  font-weight: bolder;\\r\\n}\\r\\n\\r\\n.value.value--this {\\r\\n  color: #fff;\\r\\n  font-weight: bold;\\r\\n  font-size: 20px;\\r\\n}\\r\\n\\r\\n.day-number {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.day-name {\\r\\n  display: block;\\r\\n  /* opacity: 0.4; */\\r\\n}\\r\\n\\r\\n/* Animated background, credits: Manuel Pinto, https://codepen.io/P1N2O/pen/pyBNzX */\\r\\n.card {\\r\\n  /* background: linear-gradient(-45deg, #555ff, #9787ff, #ff55b8, #ff8787); */\\r\\n  /* Space Theme */\\r\\n  /* background: linear-gradient(-45deg, rgba(55, 105, 255, 0.4), rgba(150, 50, 200, 0.3), rgba(30, 200, 120, 0.2), rgba(0, 180, 200, 0.35)); */\\r\\n  /* Background Colors */\\r\\n  background: linear-gradient(-45deg, rgba(36, 60, 64, 0.4), rgba(209, 208, 191, 0.3), rgba(131, 166, 156, 0.2), rgba(112, 147, 156, 0.35));\\r\\n  /* Complentary Colors */\\r\\n  /* background: linear-gradient(-45deg, rgba(64, 40, 36, 0.4), rgba(187, 252, 13, 0.3), rgba(166, 131, 141, 0.2), rgba(156, 121, 112, 0.35)); */\\r\\n\\r\\n  background-size: 400% 400%;\\r\\n  animation: bg 20s infinite;\\r\\n  box-shadow: 0 0 6px rgba(0, 0, 0, 0.1); /* Optional: Add a shadow for depth */\\r\\n}\\r\\n\\r\\n@keyframes bg {\\r\\n  0% {\\r\\n    background-position: 0% 50%;\\r\\n  }\\r\\n  50% {\\r\\n    background-position: 100% 50%;\\r\\n  }\\r\\n  100% {\\r\\n    background-position: 0% 50%;\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./card.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./card.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.3\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import './card.css';\r\nimport Chart from 'chart.js/auto';\r\nimport { fetchWeeklyWeather } from \"./apiModule\";\r\n\r\n\r\n// Check for existing event listeners before adding\r\nif (!document.__DOMContentLoadedHandler) {\r\n    document.__DOMContentLoadedHandler = true; // Flag to prevent re-adding\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n        // Your initialization code here\r\n        initializeChart();\r\n    });\r\n}\r\n\r\nfunction initializeChart() {\r\n\r\n    // window.chart = new Chart(canvas, config);\r\n    var canvas = document.getElementById(\"canvas\");\r\n\r\n\r\n    // Apply multiply blend when drawing datasets\r\n    var multiply = {\r\n        id: 'multiply',\r\n        beforeDatasetsDraw: function (chart, options, el) {\r\n            chart.ctx.globalCompositeOperation = 'multiply';\r\n        },\r\n        afterDatasetsDraw: function (chart, options) {\r\n            chart.ctx.globalCompositeOperation = 'source-over';\r\n        },\r\n    };\r\n\r\n    // Gradient color - this week\r\n    var gradientThisWeek = canvas.getContext('2d').createLinearGradient(0, 0, 0, 150);\r\n    gradientThisWeek.addColorStop(0, '#5555FF');\r\n    gradientThisWeek.addColorStop(1, '#9787FF');\r\n\r\n    // Gradient color - previous week\r\n    var gradientPrevWeek = canvas.getContext('2d').createLinearGradient(0, 0, 0, 150);\r\n    gradientPrevWeek.addColorStop(0, '#FF55B8');\r\n    gradientPrevWeek.addColorStop(1, '#FF8787');\r\n\r\n\r\n\r\n\r\n    var config = {\r\n        type: 'line',\r\n        data: {\r\n            labels: [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            datasets: [\r\n                {\r\n                    label: 'Temperature',\r\n                    data: [77, 77, 77, 77, 77, 77, 77],\r\n                    fill: false,\r\n                    borderColor: 'rgba(255, 255, 255, 0.6)',\r\n                    borderWidth: 2,\r\n                    pointBackgroundColor: 'transparent',\r\n                    pointBorderColor: '#FFFFFF',\r\n                    pointBorderWidth: 3,\r\n                    pointHoverBorderColor: 'rgba(255, 255, 255, 0.2)',\r\n                    pointHoverBorderWidth: 10,\r\n                    pointHoverRadius: 50,\r\n                    hitRadius: 80,\r\n                    radius: 10,\r\n                    hoverRadius: 10,\r\n                    tension: 0,\r\n                }\r\n            ]\r\n        },\r\n        options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            elements: {\r\n                point: {\r\n                    radius: 10,\r\n                    hitRadius: 10,\r\n                    hoverRadius: 10\r\n                }\r\n            },\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                tooltip: {\r\n                    backgroundColor: 'transparent',\r\n                    displayColors: false,\r\n                    bodyFont: {\r\n                        size: 32,\r\n                        weight: 'bolder',\r\n                    },\r\n                    callbacks: {\r\n                        label: function (tooltipItem) {\r\n                            return tooltipItem.formattedValue + '°F';\r\n                            // return tooltipItem.raw + '°F';\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    display: false,\r\n                },\r\n                y: {\r\n                    display: false,\r\n                    beginAtZero: true,\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                }\r\n            }\r\n        },\r\n        plugins: [multiply],\r\n    };\r\n\r\n    window.chart = new Chart(canvas, config);\r\n\r\n}\r\n\r\nexport async function displayChart(city) {\r\n    try {\r\n        const weatherData = await fetchWeeklyWeather(city);\r\n        let tempArr = [];\r\n        \r\n        if (weatherData.forecast && weatherData.forecast.forecastday) {\r\n            weatherData.forecast.forecastday.forEach(dayData => {\r\n                tempArr.push(Math.ceil(dayData.day.avgtemp_f));\r\n            });\r\n        }\r\n        \r\n        // Update chart data\r\n        window.chart.data.datasets[0].data = tempArr;\r\n        window.chart.update();\r\n        \r\n    } catch (err) {\r\n        console.error(err);\r\n        let tempArr = [77, 77, 77, 77, 77, 77, 77]; // Default data\r\n        \r\n        // Update chart data with default values\r\n        window.chart.data.datasets[0].data = tempArr;\r\n        window.chart.update();\r\n    }\r\n}"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","round","v","locals","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","b","c","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","s","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","r","g","hueValue","calln","Array","isArray","hsl2rgb","hue","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","str","charAt","m","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","type","ret","len","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","_rgb","_valid","valid","rgbString","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","isNullOrUndef","value","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","create","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","forEach","_arrayUnique","items","set","Set","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","__DOMContentLoadedHandler","gradientThisWeek","createLinearGradient","addColorStop","gradientPrevWeek","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","globalCompositeOperation","afterDatasetsDraw","initializeChart"],"sourceRoot":""}